#!/usr/bin/env python3

import sys
import os
import csv
from pyannote.audio import Pipeline

def main():
    if len(sys.argv) != 2:
        print("Usage: diarize <audio_file>")
        sys.exit(1)

    file_path = sys.argv[1]
    absolute_path = os.path.abspath(file_path)

    # Initialize pyannote pipeline
    hf_token = os.getenv("HUGGINGFACE_SPEAKER_DIARIZATION")
    if not hf_token:
        print("Error: HUGGINGFACE_SPEAKER_DIARIZATION environment variable not set")
        sys.exit(1)

    pipeline = Pipeline.from_pretrained("pyannote/speaker-diarization-3.1", use_auth_token=hf_token)

    # Run speaker diarization
    diarization = pipeline(absolute_path)

    # Collect all segments for timeline processing
    segments = []
    for segment, _, speaker in diarization.itertracks(yield_label=True):
        segments.append({
            'speaker': speaker,
            'start': segment.start,
            'end': segment.end
        })

    # Sort segments by start time
    segments.sort(key=lambda x: x['start'])

    # Resolve overlapping segments (assign to original speaker)
    resolved_segments = []
    for segment in segments:
        # Check for overlaps with existing resolved segments
        overlapping = False
        for existing in resolved_segments:
            if (segment['start'] < existing['end'] and segment['end'] > existing['start']):
                # Overlap detected - keep the original speaker's segment
                overlapping = True
                break

        if not overlapping:
            resolved_segments.append(segment)

    # Generate output directory and CSV filename
    base_name = os.path.splitext(os.path.basename(file_path))[0]
    output_dir = os.path.join("output", base_name)
    os.makedirs(output_dir, exist_ok=True)
    csv_filename = os.path.join(output_dir, f"{base_name}_timeline.csv")

    # Write timeline to CSV
    with open(csv_filename, 'w', newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(['SPEAKER_ID', 'start_time', 'end_time'])

        for segment in resolved_segments:
            writer.writerow([segment['speaker'], segment['start'], segment['end']])

    print(f"Timeline saved to: {csv_filename}")
    print(f"Total segments: {len(resolved_segments)}")

if __name__ == "__main__":
    main()